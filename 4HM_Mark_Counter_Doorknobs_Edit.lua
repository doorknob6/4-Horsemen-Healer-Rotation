{
    ["sparkWidth"] = 10,
    ["iconSource"] = -1,
    ["authorOptions"] = {
        [1] = {
            ["type"] = "select",
            ["key"] = "optStartHorseman",
            ["values"] = {
                [1] = "Highlord Mograine",
                [2] = "Thane Korth'azz",
                [3] = "Lady Blaumeux",
                [4] = "Sir Zeliek",
            },
            ["default"] = 1,
            ["name"] = "Starting Horseman",
            ["useDesc"] = false,
            ["width"] = 0.65,
        },
        [2] = {
            ["type"] = "space",
            ["variableWidth"] = true,
            ["height"] = 1,
            ["useHeight"] = false,
            ["width"] = 0.1,
        },
        [3] = {
            ["type"] = "number",
            ["useDesc"] = false,
            ["max"] = 50,
            ["step"] = 1,
            ["width"] = 0.5,
            ["min"] = 0,
            ["key"] = "optStart",
            ["default"] = 1,
            ["name"] = "First Move at Mark",
        },
        [4] = {
            ["type"] = "space",
            ["variableWidth"] = true,
            ["height"] = 1,
            ["width"] = 0.1,
            ["useHeight"] = false,
        },
        [5] = {
            ["type"] = "toggle",
            ["useDesc"] = true,
            ["width"] = 0.7,
            ["name"] = "Clockwise Rotation",
            ["default"] = true,
            ["key"] = "optRotationDirection",
            ["desc"] = "Checked means a clockwise rotation through the horsemen, unchecked counterclockwise.",
        },
        [6] = {
            ["type"] = "number",
            ["useDesc"] = false,
            ["max"] = 50,
            ["step"] = 1,
            ["width"] = 0.65,
            ["min"] = 0,
            ["key"] = "optStep",
            ["default"] = 3,
            ["name"] = "Move every X. Mark",
        },
        [7] = {
            ["type"] = "space",
            ["variableWidth"] = true,
            ["height"] = 1,
            ["useHeight"] = false,
            ["width"] = 0.1,
        },
        [8] = {
            ["type"] = "number",
            ["useDesc"] = true,
            ["max"] = 50,
            ["step"] = 1,
            ["width"] = 0.75,
            ["min"] = 0,
            ["key"] = "optStackAlarm",
            ["desc"] = "Alarm sounds when you get X or more stacks of a mark",
            ["default"] = 4,
            ["name"] = "Alarm at X Stacks of one mark",
        },
        [9] = {
            ["type"] = "toggle",
            ["default"] = true,
            ["desc"] = "Play sound when you should move",
            ["key"] = "optMoveSound",
            ["name"] = "Move mark sound",
            ["useDesc"] = true,
            ["width"] = 0.65,
        },
        [10] = {
            ["type"] = "space",
            ["variableWidth"] = true,
            ["height"] = 1,
            ["width"] = 0.1,
            ["useHeight"] = false,
        },
        [11] = {
            ["type"] = "toggle",
            ["default"] = true,
            ["width"] = 0.65,
            ["useDesc"] = true,
            ["name"] = "Wrong mark sound",
            ["key"] = "optWrongSound",
            ["desc"] = "Play sound when you get a mark from the wrong horseman",
        },
    },
    ["preferToUpdate"] = false,
    ["customText"] = "function()\\n    return aura_env.markCount, aura_env.message, aura_env.currentHorseman\\nend",
    ["yOffset"] = 161.41440010071,
    ["anchorPoint"] = "CENTER",
    ["sparkRotation"] = 0,
    ["sparkRotationMode"] = "AUTO",
    ["url"] = "",
    ["actions"] = {
        ["start"] = {
        },
        ["finish"] = {
        },
        ["init"] = {
            ["custom"] = "aura_env.last=0\\naura_env.maxMarkStack=0\\naura_env.markCount=0\\naura_env.wrongMark=false\\n\\n--horsemen mark ids/names and npc ids/names in clockwise order\\n--[Lady Blaumeaux]  --► [Sir Zeliek]\\n--      ▲                     |\\n--      |                     ▼\\n--[Thane Korth'azz] ◄-- [Highlord Mograine]\\n\\naura_env.markIDs={28834, 28832, 28833, 28835}\\naura_env.markNames = {}\\nfor _,v in pairs(aura_env.markIDs) do\\n    local name=GetSpellInfo(v)\\n    table.insert(aura_env.markNames, name)\\nend\\naura_env.horsemenIDs={16062, 16064, 16065, 16063}\\naura_env.horsemenNames = {\\\"Highlord Mograine\\\", \\\"Thane Korth'azz\\\", \\\"Lady Blaumeaux\\\", \\\"Sir Zeliek\\\"}\\n\\n--in case encounter start event is missed, these values are set on init\\naura_env.message=\\\"Start at \\\"\\n--name of the current horseman in the rotation\\naura_env.currentHorsemanNumber=aura_env.config.optStartHorseman\\n--index in the mark id, npc id and names tables of the current horseman, set on encounter start\\naura_env.currentHorseman=aura_env.horsemenNames[aura_env.currentHorsemanNumber]\\n\\n--setting values in case encounter_start (loads aura), comes after PLAYER_REGEN_DISABLED and the trigger doesnt get the encounter_start event, since the aura just loaded\\naura_env.timer=20\\naura_env.expirationTime=GetTime()+20\\n\\n\\n\\n",
            ["do_custom"] = true,
        },
    },
    ["triggers"] = {
        [1] = {
            ["trigger"] = {
                ["type"] = "custom",
                ["custom_hide"] = "timed",
                ["subeventSuffix"] = "_CAST_START",
                ["subeventPrefix"] = "SPELL",
                ["duration"] = "12",
                ["event"] = "Health",
                ["dynamicDuration"] = true,
                ["customDuration"] = "function()\\n    return aura_env.timer, aura_env.expirationTime\\nend",
                ["names"] = {
                },
                ["custom"] = "function(event, timestamp, subEvent, hideCaster, sourceGUID, sourceName, sourceFlags, sourceRaidFlags, destGUID, destName, destFlags, destRaidFlags,_, spellName, ...)\\n    if subEvent==\\\"SPELL_CAST_SUCCESS\\\" then\\n        \\n        --else error in options\\n        sourceGUID=sourceGUID or \\\"\\\"\\n        local type, zero, server_id, instance_id, zone_uid, npc_id, spawn_uid = strsplit(\\\"-\\\", sourceGUID)\\n        npc_id = tonumber(npc_id)\\n        \\n        --mark cast by horsemen, not spirit, plus not in the cooldown period of 5s\\n        if tContains(aura_env.horsemenIDs, npc_id) and tContains(aura_env.markNames, spellName) and GetTime()>aura_env.last+5 then\\n            \\n            aura_env.last=GetTime()\\n            \\n            aura_env.markCount=aura_env.markCount+1\\n            \\n            --change message and horseman location\\n            if (aura_env.markCount==aura_env.config.optStart or (aura_env.markCount-aura_env.config.optStart) % aura_env.config.optStep==0 and aura_env.markCount>aura_env.config.optStart) then\\n                \\n                --change the current horseman\\n                --clockwise rotation\\n                if (aura_env.config.optRotationDirection) then\\n                    if (aura_env.currentHorsemanNumber<4) then\\n                        aura_env.currentHorsemanNumber=aura_env.currentHorsemanNumber+1\\n                    else\\n                        aura_env.currentHorsemanNumber=1\\n                    end\\n                    --counterclockwise rotation\\n                else\\n                    if (aura_env.currentHorsemanNumber>1) then\\n                        aura_env.currentHorsemanNumber=aura_env.currentHorsemanNumber-1\\n                    else\\n                        aura_env.currentHorsemanNumber=4\\n                    end\\n                end\\n                \\n                aura_env.currentHorseman=aura_env.horsemenNames[aura_env.currentHorsemanNumber]\\n                \\n                --move message\\n                aura_env.message=\\\"MOVE to \\\"\\n                \\n            else\\n                --location message\\n                aura_env.message=\\\"Currently at \\\"\\n            end\\n            \\n            --get the debuff stack for the new mark\\n            _,_,aura_env.maxMarkStack=WA_GetUnitDebuff(\\\"player\\\", spellName)\\n            aura_env.maxMarkStack=aura_env.maxMarkStack or 0\\n            --set the message\\n            if aura_env.maxMarkStack>=aura_env.config.optStackAlarm then\\n                aura_env.message=aura_env.maxMarkStack..\\\" STACKS \\\"..aura_env.message\\n            end\\n            \\n            --check if you got the correct mark\\n            aura_env.wrongMark=false\\n            if (spellName~=aura_env.markNames[aura_env.currentHorsemanNumber]) then\\n                aura_env.wrongMark=true\\n            end\\n            \\n            --set progress bar times\\n            aura_env.timer=12\\n            aura_env.expirationTime=GetTime()+12\\n            return true\\n            \\n        end\\n        \\n        --start of combat\\n    elseif event==\\\"ENCOUNTER_START\\\" then\\n        --reset\\n        aura_env.markCount=0\\n        --set the starting horseman as the current one\\n        aura_env.currentHorsemanNumber=aura_env.config.optStartHorseman\\n        aura_env.currentHorseman=aura_env.horsemenNames[aura_env.currentHorsemanNumber]\\n        --set the starting message\\n        aura_env.message=\\\"Start at \\\"\\n        --set progress bar times\\n        aura_env.timer=20\\n        aura_env.expirationTime=GetTime()+20\\n        \\n        return true\\n        \\n        --end of fight reset\\n    elseif event == \\\"ENCOUNTER_END\\\" then\\n        --reset\\n        aura_env.markCount=0\\n        aura_env.message=\\\"\\\"\\n        aura_env.currentHorseman=\\\"\\\"\\n        aura_env.currentHorsemanNumber=0\\n        \\n        return true\\n    end\\n    \\nend",
                ["events"] = "COMBAT_LOG_EVENT_UNFILTERED, ENCOUNTER_START, ENCOUNTER_END",
                ["custom_type"] = "event",
                ["spellIds"] = {
                },
                ["unit"] = "player",
                ["debuffType"] = "HELPFUL",
            },
            ["untrigger"] = {
            },
        },
        [2] = {
            ["trigger"] = {
                ["custom_hide"] = "timed",
                ["type"] = "custom",
                ["custom"] = "function(event, timestamp, subEvent, hideCaster, sourceGUID, sourceName, sourceFlags, sourceRaidFlags, destGUID, destName, destFlags, destRaidFlags,_, spellName, ...)\\n    if subEvent==\\\"UNIT_DIED\\\" then\\n        --else error in options\\n        destGUID=destGUID or \\\"\\\"\\n        local type, zero, server_id, instance_id, zone_uid, npc_id, spawn_uid = strsplit(\\\"-\\\", destGUID)\\n        npc_id = tonumber(npc_id)\\n        if tContains(aura_env.horsemenIDs, npc_id) then\\n            for n, id in pairs(aura_env.horsemenIDs) do\\n                if (id==npc_id) then\\n                    aura_env.horsemenNames[n]=\\\"Safe Zone\\\"\\n                    if (n==aura_env.currentHorsemanNumber) then\\n                        aura_env.message=\\\"MOVE to \\\"\\n                        aura_env.currentHorseman=aura_env.horsemenNames[n]\\n                    end\\n                    break\\n                end\\n            end\\n            return true\\n        end\\n    end\\nend",
                ["custom_type"] = "event",
                ["events"] = "COMBAT_LOG_EVENT_UNFILTERED",
                ["duration"] = "",
                ["debuffType"] = "HELPFUL",
                ["unit"] = "player",
            },
            ["untrigger"] = {
            },
        },
        [3] = {
            ["trigger"] = {
                ["type"] = "status",
                ["unevent"] = "auto",
                ["duration"] = "1",
                ["use_genericShowOn"] = true,
                ["genericShowOn"] = "showOnCooldown",
                ["unit"] = "player",
                ["realSpellName"] = 0,
                ["use_spellName"] = true,
                ["spellName"] = 0,
                ["event"] = "Conditions",
                ["use_alive"] = true,
                ["use_track"] = true,
                ["debuffType"] = "HELPFUL",
            },
            ["untrigger"] = {
            },
        },
        ["disjunctive"] = "any",
        ["activeTriggerMode"] = -10,
    },
    ["icon_color"] = {
        [1] = 1,
        [2] = 1,
        [3] = 1,
        [4] = 1,
    },
    ["internalVersion"] = 40,
    ["animation"] = {
        ["start"] = {
            ["easeStrength"] = 3,
            ["type"] = "none",
            ["duration_type"] = "seconds",
            ["easeType"] = "none",
        },
        ["main"] = {
            ["easeStrength"] = 3,
            ["type"] = "none",
            ["duration_type"] = "seconds",
            ["easeType"] = "none",
        },
        ["finish"] = {
            ["easeStrength"] = 3,
            ["type"] = "none",
            ["duration_type"] = "seconds",
            ["easeType"] = "none",
        },
    },
    ["barColor"] = {
        [1] = 0.12156862745098,
        [2] = 0.090196078431373,
        [3] = 0.76862745098039,
        [4] = 1,
    },
    ["desaturate"] = false,
    ["uid"] = "yO)ndpt09kY",
    ["version"] = 5,
    ["subRegions"] = {
        [1] = {
            ["type"] = "aurabar_bar",
        },
        [2] = {
            ["text_text_format_p_time_precision"] = 0,
            ["text_text"] = "%p",
            ["text_shadowColor"] = {
                [1] = 0,
                [2] = 0,
                [3] = 0,
                [4] = 1,
            },
            ["text_selfPoint"] = "AUTO",
            ["text_automaticWidth"] = "Auto",
            ["text_fixedWidth"] = 64,
            ["anchorYOffset"] = 0,
            ["text_justify"] = "CENTER",
            ["rotateText"] = "NONE",
            ["type"] = "subtext",
            ["text_color"] = {
                [1] = 1,
                [2] = 1,
                [3] = 1,
                [4] = 1,
            },
            ["text_font"] = "Friz Quadrata TT",
            ["text_shadowYOffset"] = -1,
            ["text_text_format_p_format"] = "timed",
            ["text_wordWrap"] = "WordWrap",
            ["text_fontType"] = "None",
            ["text_anchorPoint"] = "INNER_LEFT",
            ["text_shadowXOffset"] = 1,
            ["text_visible"] = true,
            ["text_fontSize"] = 12,
            ["anchorXOffset"] = 0,
            ["text_text_format_p_time_dynamic"] = false,
        },
        [3] = {
            ["text_text_format_n_format"] = "none",
            ["text_text"] = "%c1",
            ["text_shadowColor"] = {
                [1] = 0,
                [2] = 0,
                [3] = 0,
                [4] = 1,
            },
            ["text_selfPoint"] = "BOTTOM",
            ["text_automaticWidth"] = "Auto",
            ["text_fixedWidth"] = 64,
            ["anchorYOffset"] = 0,
            ["text_justify"] = "CENTER",
            ["rotateText"] = "NONE",
            ["type"] = "subtext",
            ["text_color"] = {
                [1] = 1,
                [2] = 1,
                [3] = 1,
                [4] = 1,
            },
            ["text_font"] = "Friz Quadrata TT",
            ["text_shadowYOffset"] = -1,
            ["text_wordWrap"] = "WordWrap",
            ["text_fontType"] = "None",
            ["text_anchorPoint"] = "INNER_TOP",
            ["text_text_format_c1_format"] = "none",
            ["text_shadowXOffset"] = 1,
            ["text_fontSize"] = 64,
            ["anchorXOffset"] = 0,
            ["text_visible"] = true,
        },
        [4] = {
            ["text_text_format_n_format"] = "none",
            ["text_text"] = "%c2",
            ["text_shadowColor"] = {
                [1] = 0,
                [2] = 0,
                [3] = 0,
                [4] = 1,
            },
            ["text_selfPoint"] = "TOPRIGHT",
            ["text_automaticWidth"] = "Auto",
            ["text_fixedWidth"] = 64,
            ["anchorYOffset"] = 0,
            ["text_justify"] = "CENTER",
            ["rotateText"] = "NONE",
            ["type"] = "subtext",
            ["text_color"] = {
                [1] = 0.94117647058823,
                [2] = 1,
                [3] = 0.94509803921569,
                [4] = 1,
            },
            ["text_font"] = "DorisPP",
            ["text_shadowYOffset"] = -1,
            ["text_wordWrap"] = "WordWrap",
            ["text_text_format_c2_format"] = "none",
            ["text_fontType"] = "None",
            ["text_anchorPoint"] = "BOTTOM",
            ["text_anchorYOffset"] = -6,
            ["text_visible"] = true,
            ["text_fontSize"] = 23,
            ["anchorXOffset"] = 0,
            ["text_shadowXOffset"] = 1,
        },
        [5] = {
            ["text_shadowXOffset"] = 1,
            ["text_text"] = "%c3",
            ["text_shadowColor"] = {
                [1] = 0,
                [2] = 0,
                [3] = 0,
                [4] = 1,
            },
            ["text_selfPoint"] = "TOPLEFT",
            ["text_automaticWidth"] = "Auto",
            ["text_fixedWidth"] = 64,
            ["anchorYOffset"] = 0,
            ["text_justify"] = "CENTER",
            ["rotateText"] = "NONE",
            ["type"] = "subtext",
            ["text_anchorXOffset"] = 0,
            ["text_color"] = {
                [1] = 0.53333333333333,
                [2] = 0.019607843137255,
                [3] = 0,
                [4] = 1,
            },
            ["text_font"] = "DorisPP",
            ["text_text_format_n_format"] = "none",
            ["text_shadowYOffset"] = -1,
            ["text_text_format_c3_format"] = "none",
            ["text_text_format_c2_format"] = "none",
            ["text_fontType"] = "None",
            ["text_anchorPoint"] = "BOTTOM",
            ["text_anchorYOffset"] = -6,
            ["text_visible"] = true,
            ["text_fontSize"] = 23,
            ["anchorXOffset"] = 0,
            ["text_wordWrap"] = "WordWrap",
        },
        [6] = {
            ["border_size"] = 2,
            ["border_anchor"] = "bar",
            ["type"] = "subborder",
            ["border_color"] = {
                [1] = 0,
                [2] = 0,
                [3] = 0,
                [4] = 1,
            },
            ["border_visible"] = true,
            ["border_edge"] = "1 Pixel",
            ["border_offset"] = 0,
        },
    },
    ["height"] = 19.999942779541,
    ["sparkOffsetX"] = 0,
    ["load"] = {
        ["ingroup"] = {
        },
        ["use_encounterid"] = true,
        ["talent"] = {
            ["multi"] = {
            },
        },
        ["class"] = {
            ["multi"] = {
            },
        },
        ["encounterid"] = "1121",
        ["spec"] = {
            ["multi"] = {
            },
        },
        ["size"] = {
            ["multi"] = {
            },
        },
    },
    ["sparkBlendMode"] = "ADD",
    ["useAdjustededMax"] = false,
    ["xOffset"] = 140,
    ["backgroundColor"] = {
        [1] = 0,
        [2] = 0,
        [3] = 0,
        [4] = 0.5,
    },
    ["selfPoint"] = "CENTER",
    ["alpha"] = 1,
    ["sparkOffsetY"] = 0,
    ["smoothProgress"] = false,
    ["useAdjustededMin"] = false,
    ["regionType"] = "aurabar",
    ["conditions"] = {
        [1] = {
            ["check"] = {
                ["trigger"] = -1,
                ["variable"] = "customcheck",
                ["value"] = "function()\\n    return (aura_env.maxMarkStack>=aura_env.config.optStackAlarm)\\nend",
            },
            ["changes"] = {
                [1] = {
                    ["value"] = {
                        ["sound_type"] = "Play",
                        ["sound"] = "Interface\\\\Addons\\\\WeakAuras\\\\PowerAurasMedia\\\\Sounds\\\\sonar.ogg",
                        ["sound_channel"] = "Master",
                    },
                    ["property"] = "sound",
                },
                [2] = {
                    ["value"] = {
                        ["custom"] = "aura_env.maxMarkStack=0",
                    },
                    ["property"] = "customcode",
                },
            },
        },
        [2] = {
            ["check"] = {
                ["trigger"] = -1,
                ["variable"] = "customcheck",
                ["value"] = "function()\\n    local periodicMove=(aura_env.markCount==aura_env.config.optStart or (aura_env.markCount-aura_env.config.optStart) % aura_env.config.optStep==0 and aura_env.markCount>aura_env.config.optStart)\\n    return periodicMove and aura_env.config.optMoveSound\\nend",
            },
            ["changes"] = {
                [1] = {
                    ["value"] = {
                        ["sound_type"] = "Play",
                        ["sound"] = "Interface\\\\AddOns\\\\WeakAuras\\\\Media\\\\Sounds\\\\BikeHorn.ogg",
                        ["sound_channel"] = "Master",
                    },
                    ["property"] = "sound",
                },
            },
        },
        [3] = {
            ["check"] = {
                ["trigger"] = -1,
                ["variable"] = "customcheck",
                ["value"] = "function()\\n    return aura_env.wrongMark and aura_env.config.optWrongSound\\nend",
            },
            ["changes"] = {
                [1] = {
                    ["value"] = {
                        ["sound_type"] = "Play",
                        ["sound"] = "Interface\\\\Addons\\\\WeakAuras\\\\PowerAurasMedia\\\\Sounds\\\\ESPARK1.ogg",
                        ["sound_channel"] = "Master",
                    },
                    ["property"] = "sound",
                },
                [2] = {
                    ["value"] = {
                        ["custom"] = "aura_env.wrongMark=false",
                    },
                    ["property"] = "customcode",
                },
            },
        },
    },
    ["icon"] = true,
    ["icon_side"] = "LEFT",
    ["config"] = {
        ["optMoveSound"] = true,
        ["optStartHorseman"] = 1,
        ["optRotationDirection"] = true,
        ["optStackAlarm"] = 4,
        ["optWrongSound"] = true,
        ["optStart"] = 2,
        ["optStep"] = 3,
    },
    ["sparkHeight"] = 30,
    ["texture"] = "Solid",
    ["sparkTexture"] = "Interface\\\\\\\\CastingBar\\\\\\\\UI-CastingBar-Spark",
    ["zoom"] = 0.1,
    ["spark"] = false,
    ["tocversion"] = 11306,
    ["sparkHidden"] = "NEVER",
    ["width"] = 100.00003051758,
    ["frameStrata"] = 1,
    ["anchorFrameType"] = "SCREEN",
    ["auto"] = true,
    ["sparkColor"] = {
        [1] = 1,
        [2] = 1,
        [3] = 1,
        [4] = 1,
    },
    ["inverse"] = false,
    ["semver"] = "0.1.0",
    ["orientation"] = "HORIZONTAL",
    ["displayIcon"] = 136192,
    ["information"] = {
    },
    ["id"] = "4HM_Mark_Counter_Doorknobs_Edit",
}